version: "3"
services:
  gargbot_frontend:
    container_name: gargbot_frontend
    build: frontend/.
    ports:
      - 8081:8081
    networks:
      - nginx_network
    restart: always

  gargbot_server:
    container_name: gargbot_server
    build: .
    env_file:
      - .env
    environment:
      - app_version
    command: "venv/bin/python -m gargbot_3000 --mode server"
    expose:
      - 5000
    ports:
      - "5000:5000"
    depends_on:
      - postgres_db
    networks:
      - gargbot_network
      - nginx_network
    restart: always

  gargbot_worker:
    container_name: gargbot_worker
    build: .
    env_file:
      - .env
    environment:
      - app_version
    command: "venv/bin/python -m gargbot_3000 --mode task"
    restart: always
    depends_on:
      - postgres_db
    networks:
      - gargbot_network

  gargbot_scheduler:
    container_name: gargbot_scheduler
    build: .
    env_file:
      - .env
    environment:
      - app_version
    command: "venv/bin/python -m gargbot_3000 --mode scheduler"
    restart: always
    depends_on:
      - postgres_db
    networks:
      - gargbot_network

  postgres_db:
    container_name: postgres_db
    image: "postgres"
    env_file: .env
    expose:
      - 5432
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - gargbot_network
    restart: always

networks:
  nginx_network:
    external:
      name: nginx_default
  gargbot_network: ~
